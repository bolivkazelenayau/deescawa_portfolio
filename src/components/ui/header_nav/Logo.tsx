"use client";

import Link from "next/link";
import { motion } from "framer-motion";
import { useState, useEffect, useCallback, memo, useMemo } from "react";
import { usePathname } from "next/navigation";

interface LogoProps {
  className?: string;
}

// Static SVG component - never re-renders
const LogoSvg = memo(() => (
  <svg width="44" height="44" viewBox="0 0 95 93" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M49.858 1.23009C48.7164 1.72308 47.6006 3.12423 46.1216 5.84869C43.2675 11.116 42.093 11.1162 39.8854 6.88719C38.588 4.21464 37.7837 2.81394 36.7977 2.29499C34.9295 1.33495 31.9715 2.03636 30.0774 4.16403C29.5325 4.81271 28.1068 6.8012 27.1467 8.2283C23.8357 13.15 22.1672 14.3975 20.6106 9.30028C20.3511 8.54781 19.6238 7.46871 19.3124 7.26113C17.3743 5.96902 14.5125 7.49951 10.7242 11.2878C9.32305 12.7149 7.503 14.6037 7.60679 14.7075C7.96531 14.7075 9.27988 14.3444 10.293 13.8559C11.5461 13.3818 11.9656 13.0084 12.8067 12.2188C14.1901 10.875 15.5981 9.776 16.4581 11.8323C17.5177 15.6477 18.6695 16.4086 21.215 16.4086C24.7218 16.4086 27.6902 13.7891 30.0774 9.74138C31.4266 7.45803 32.2657 5.84869 33.82 5.84869C35.0355 5.84869 34.9848 6.62772 36.3341 9.30028C37.7871 12.2323 38.9705 13.3818 40.709 13.745C42.3955 14.1083 42.9987 14.2121 44.5296 13.745C46.6054 13.1223 47.3322 11.9728 50.394 6.54988C51.2762 5.019 52.0304 4.81131 52.8867 5.14862C53.7689 5.48594 54.177 6.15109 55.8635 9.00528C57.2865 11.9484 59.015 13.2736 60.2864 13.9483C62.3102 14.9862 65.599 14.6973 66.8445 13.5556C68.3033 12.3052 68.8122 7.60926 70.9324 7.60926C71.6849 7.60926 72.9391 9.1799 75.43 12.4492C77.9469 15.7445 78.9427 16.9822 81.1116 17.6861C84.7702 19.2948 87.9797 18.6374 88.0955 15.6549C88.1474 14.9803 87.9437 15.1892 86.309 14.5146C85.323 14.0994 84.0308 13.6277 83.927 13.6277C83.1859 13.6277 83.5836 14.7324 82.4655 14.8835C81.297 14.7769 80.83 14.4119 77.9239 10.7793C76.6006 9.14459 74.4862 6.64981 73.7337 5.97518C71.2947 3.69183 68.2975 3.18387 66.8445 4.32554C65.1101 5.64694 65.1636 8.2137 63.8562 9.86967C62.481 11.686 61.3696 11.0387 58.4116 6.21257C56.6991 3.43622 55.5508 1.87876 54.0199 1.23009C52.9042 0.763037 50.8959 0.763037 49.858 1.23009Z" fill="white" />
    <path d="M51.4367 21.1748C49.0496 21.7716 48.1476 22.4317 45.6567 26.4794C43.7625 29.5412 43.5335 30.0183 42.3659 30.0183C41.1723 30.0183 40.7149 29.6238 38.8986 26.588C36.5374 22.6959 35.1652 21.5318 32.2072 21.5318C29.4308 21.5318 27.003 22.7617 24.0598 27.5481C22.3733 30.013 21.1567 31.1012 20.0409 31.1012C18.9771 31.1012 18.5265 30.6547 17.0735 28.1379C15.1507 24.5289 14.3659 24.5903 12.6274 24.4346C9.66945 24.201 7.2737 25.3799 3.81014 28.8916C2.38718 30.3343 1.96776 30.863 2.48736 30.8368H3.07424C3.74025 30.8507 4.7643 30.8882 5.99535 30.8368C8.31545 30.3542 9.68985 27.25 11.3176 28.1379C11.629 28.2935 12.3015 29.4871 12.8983 30.525C14.924 34.3395 16.6887 34.9101 19.6467 34.9101C22.4749 34.9101 24.8583 33.5303 27.5309 29.8458C30.1775 26.2392 30.5704 25.595 31.4786 25.4134C32.5943 25.2058 33.1658 26.0623 34.6189 28.6051C36.2016 31.3295 38.2512 33.3045 39.7562 33.6937C41.313 34.1348 44.0826 33.9537 45.354 33.2791C46.7292 32.5785 47.5918 31.6407 49.5897 28.5271C52.7851 23.7561 53.3728 23.738 56.6553 28.7881C57.6672 30.3449 59.1579 32.1807 59.7287 32.6996C62.2715 34.8792 67.0002 34.6765 69.2057 32.5229C70.9398 30.8852 71.7726 27.0858 74.2531 26.4427C75.2651 26.1832 76.4096 27.4901 77.9664 29.6697C78.8227 30.8373 79.8009 32.2221 80.3977 32.8967C82.7075 35.7922 88.3659 36.5326 91.5202 34.2354C92.6879 33.2235 93.5907 31.511 93.2275 31.2256C92.9581 30.9334 89.583 30.5389 88.3659 30.5389C87.5271 31.4518 87.6085 32.0831 86.2403 32.169C84.3026 32.038 84.281 31.6148 81.349 27.8265C80.3889 26.581 79.2326 25.1466 78.6531 24.7169C75.865 22.6498 73.1782 22 70.4678 22.9484C68.468 23.9083 67.172 27.3887 66.0117 29.1738C64.6773 30.5867 63.8609 30.4611 62.5373 29.6428C62.1222 29.1757 61.0324 27.7227 60.1242 26.3994C59.2161 25.0501 58.1664 23.2502 57.5437 22.7053C55.8831 21.2522 53.5384 20.6299 51.4367 21.1748Z" fill="white" />
    <path d="M51.0265 40.9884C49.0027 41.6111 47.7478 42.8676 45.4904 46.3446C43.6481 49.1728 43.0911 49.7531 42.0273 49.7531C40.8078 49.7531 40.5947 49.5872 38.7265 46.6811C36.7026 43.5675 35.9473 42.495 34.624 41.8204C32.4963 40.7047 28.4818 40.8955 26.5617 42.2967C25.9908 42.6859 24.5103 44.368 23.6021 45.6134C20.9036 49.2979 20.6291 49.6916 19.5393 49.6916C18.4755 49.6916 17.9616 49.3349 16.5345 47.337C14.0436 43.8341 13.469 42.9441 12.1457 42.3213C10.1478 41.3353 7.76974 41.3515 5.59018 42.0261C3.30542 42.7152 1.63908 44.8092 0.485474 46.7938H3.39833C5.78547 46.8717 5.4535 46.8457 6.33571 46.0673C7.03628 45.4705 7.47738 45.2889 8.33364 45.2889C9.631 45.2889 10.2537 45.8597 12.7447 49.2329C14.8188 52.4387 17.0077 53.1729 19.932 53.3325C22.9678 53.3325 24.4728 52.2687 27.1453 48.2728C28.3908 46.4306 29.1692 45.5224 29.8698 45.1592C30.5703 44.7959 31.1412 44.7959 31.8158 45.1592C32.4904 45.5224 33.1079 46.4306 34.3274 48.2728C36.5963 52.0085 38.121 52.9174 40.0411 53.4882C42.7655 54.2666 45.3602 53.592 47.2803 51.62C47.7993 51.1011 48.7593 49.7778 49.408 48.688C51.1205 45.8857 52.2622 44.77 53.326 44.77C54.6493 44.77 55.1113 45.7819 56.9795 48.688C59.2091 52.1562 61.501 54.3627 66.3478 52.942C68.4495 52.4231 69.6866 51.573 71.7624 48.5371C72.6446 47.2657 73.7927 45.699 74.2079 45.3358C75.7647 44.0384 77.0367 44.7763 79.1903 47.864C80.8249 50.1992 81.3973 51.6908 83.8917 52.2687C86.7143 52.7827 89.6261 52.7098 91.7018 51.2308C92.7138 50.4783 94.8907 47.4834 94.8907 47.1201C94.8907 47.0695 89.6381 47.0614 89.6014 47.1201C89.2122 47.7428 87.5698 49.1707 86.9471 49.1707C85.9352 49.1707 85.4745 49.1291 83.6063 46.5603C80.8044 42.3689 79.44 41.1376 75.3417 41.1376C71.6398 41.1376 70.8623 41.9779 68.2416 45.8181C66.1399 48.9058 65.6936 49.549 64.5 49.549C63.3324 49.549 62.641 49.155 61.0063 46.6382C59.0084 43.5245 57.74 41.8568 56.0535 41.2081C54.6264 40.6892 52.246 40.6251 51.0265 40.9884Z" fill="white" />
    <path d="M4.57143 58.8044C3.48165 59.2974 1.84602 61.5634 2.10549 61.9785C2.18333 62.1083 3.50741 62.4919 4.67503 62.6735C6.72486 62.9589 6.82864 62.9589 7.2438 62.44C8.126 61.3502 9.63094 61.2724 10.8764 62.2843C11.2137 62.5697 12.3294 63.8411 13.3673 65.1385C15.8842 68.304 17.2075 69.5495 18.8941 70.276C20.7882 71.1063 21.9039 71.288 23.4089 71.0025C24.9916 70.7171 26.0814 69.6792 27.6123 67.0845C29.6621 63.5817 30.3766 62.6991 32.3606 63.8152C32.7758 64.0487 33.9953 65.5277 35.2408 67.344C36.4343 69.0825 37.6602 70.9428 38.1791 71.3839C40.0213 72.9148 43.245 73.0258 45.3208 71.962C46.7219 71.2614 47.6568 70.0383 49.5509 66.9765C51.5229 63.811 51.9879 63.5962 53.2333 63.5962C54.2453 63.5962 55.1231 65.063 56.628 67.6577C57.8475 69.7854 59.4495 71.1323 60.3836 71.5993C62.615 72.741 65.8843 72.0923 68.1677 70.0425C68.8683 69.4198 70.1397 67.8889 70.9959 66.6434C73.7924 62.5924 75.5924 60.2953 78.2078 65.6235C80.2576 69.2821 81.6083 69.6533 84.5144 69.1862C86.201 68.9268 87.4205 68.3559 89.2368 67.0326C90.5341 66.0985 93.261 62.708 93.0534 62.5005C92.9756 62.4486 92.0739 62.4226 91.036 62.5005C89.1938 62.6821 88.4984 62.5854 87.5253 63.7138C85.051 66.2605 84.229 66.6175 82.231 63.0887C80.7257 59.7267 78.3267 58.5409 75.3325 58.5409C71.9334 58.489 70.2112 60.1566 66.7602 65.0087C64.8401 67.7073 64.7825 68.0205 63.6927 68.0205C62.7326 68.0205 61.4461 67.344 60.3057 65.0087C58.4031 61.1126 56.9632 59.9646 54.2387 59.6792C49.8285 59.2042 47.8721 61.2816 45.8064 65.0087C43.4193 68.6154 43.4459 68.5519 42.4599 68.5519C41.1885 68.5519 40.9973 68.676 38.9475 65.5883C36.569 62.1338 35.1321 58.8008 29.4484 59.4605C26.7588 59.9173 26.2159 60.7507 24.3736 63.6049C20.9486 68.8981 20.7171 68.8186 15.865 62.1502C13.8411 59.3738 11.2257 57.9679 8.06019 57.9679C6.86662 57.9679 5.272 58.493 4.57143 58.8044Z" fill="white" />
    <path d="M8.16565 75.5968C7.62076 76.2195 7.20959 77.603 7.20959 78.0442C7.63261 78.4222 10.7899 79.628 11.4731 79.8765C12.1152 78.9134 12.7399 78.507 13.9122 79.124C14.7425 79.5651 15.1576 80.0062 18.4529 84.1318C21.8779 88.3871 24.0392 89.6838 26.7636 89.6838C28.1129 89.6838 29.1431 88.8282 30.1551 86.2854C31.8912 81.5876 33.3229 81.1238 36.654 87.0951C39.2605 91.7676 40.5622 92.531 43.4373 92.531C45.8244 92.531 46.8671 91.625 48.9948 87.681C50.4737 84.9306 51.6471 83.4916 52.4255 83.4916C53.3855 83.4916 54.2848 85.0824 55.8156 87.9885C57.5281 91.3097 58.5643 91.6063 60.6401 91.6063C63.4437 91.2868 65.235 89.4042 68.4012 85.3773C70.9959 81.5371 72.1895 80.603 73.4609 81.4333C74.9305 83.0033 73.8384 87.3448 78.4091 86.5628C82.4753 85.1357 85.663 81.1696 87.8203 78.3247C85.9836 78.9879 84.083 79.3431 83.4257 79.9108C82.0806 81.3086 79.8358 83.9019 78.8839 82.0041C77.327 78.5272 76.5221 77.2419 74.4464 77.0343C71.837 77.0343 68.1048 78.072 65.1268 83.6214C61.4175 88.9519 61.1493 88.4838 59.0862 85.1697C57.8148 82.6009 56.8865 80.9394 55.9524 80.4465C54.9924 79.9275 52.5335 79.5137 51.2362 79.7991C48.9269 80.2921 47.2286 82.1542 45.023 86.5133C44.2965 87.9145 43.6867 88.6656 43.038 88.6656C42.2596 88.6656 41.553 88.1016 39.9443 85.4031C37.2198 80.8364 35.8021 78.8692 31.8912 78.8692C26.2304 78.8692 27.5572 83.6531 24.9932 85.7512C24.111 86.2961 23.2509 85.5773 20.734 82.2561C17.6203 78.2083 16.3878 76.9262 14.1563 75.8624C12.9566 75.2731 9.28885 74.2693 8.16565 75.5968Z" fill="white" />
  </svg>
));

LogoSvg.displayName = 'LogoSvg';

// Isolated scroll-dependent wrapper - only this re-renders
const ScrollableLogoWrapper = memo(({ 
  children, 
  className 
}: { 
  children: React.ReactNode; 
  className?: string; 
}) => {
  const [scrolled, setScrolled] = useState(false);

  // Optimized scroll handler
  const handleScroll = useCallback(() => {
    setScrolled(window.scrollY > 50);
  }, []);

  useEffect(() => {
    window.addEventListener("scroll", handleScroll, { passive: true });
    return () => window.removeEventListener("scroll", handleScroll);
  }, [handleScroll]);

  // Memoize motion div className
  const motionClassName = useMemo(() => 
    `fixed top-0 left-0 w-full ${className || ''}`, 
    [className]
  );

  return (
    <motion.div className={motionClassName}>
      <div className="container max-w-full!">
        <div className="flex justify-between h-20 items-center">
          <div>
            {children}
          </div>
        </div>
      </div>
    </motion.div>
  );
});

ScrollableLogoWrapper.displayName = 'ScrollableLogoWrapper';

// Pure Logo component with Static Link Dynamic Locale approach
const PureLogo = memo(({ pathname }: { pathname: string }) => {
  // Memoize href based on pathname to determine current locale
  const href = useMemo(() => {
    // Extract locale from pathname
    const segments = pathname.split('/').filter(Boolean);
    const currentLocale = segments[0];
    
    // Return appropriate home route based on current locale
    if (currentLocale === 'ru') {
      return '/ru';
    } else if (currentLocale === 'en') {
      return '/en';
    } else {
      // Default case - if no locale in path, assume Russian (your default)
      return '/ru';
    }
  }, [pathname]);

  return (
    <Link href={href}>
      <span className="size-11 fill-white">
        <LogoSvg />
      </span>
    </Link>
  );
});

PureLogo.displayName = 'PureLogo';

// Main Logo component - optimized with custom comparison
export const Logo: React.FC<LogoProps> = memo(({ className }) => {
  const pathname = usePathname();

  return (
    <ScrollableLogoWrapper className={className}>
      <PureLogo pathname={pathname} />
    </ScrollableLogoWrapper>
  );
}, (prevProps, nextProps) => {
  // Custom comparison function for better memoization
  return prevProps.className === nextProps.className;
});

Logo.displayName = 'Logo';